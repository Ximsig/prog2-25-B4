# Aqui hacemos el men√∫ para que el usuario interact√∫e con la app.
import requests
import json

URL = "http://127.0.0.1:5050"
token = None  # Para almacenar el token de autenticaci√≥n

def menu_principal():
    print('\n ---MEN√ö PRINCIPAL---')
    print('1. Registrar usuario')
    print('2. Iniciar sesi√≥n')
    print('3. Ver valoraciones')
    print('0. Salir')
    return input('Elige opci√≥n: ')

def menu_usuario():
    print("\n ---MEN√ö USUARIO---")
    print("4. Agregar veh√≠culo (vendedor)")
    print("5. Mostrar veh√≠culos disponibles")
    print("6. Realizar compra")
    print("7. Enviar mensaje")
    print("8. Leer chat")
    print("9. Ver todos tus chats")
    print("10. Estimar valor de reventa")
    print("11. Gestionar historial de veh√≠culo")
    print("12. Publicar anuncio")
    print("13. Listar anuncios")
    print("14. Buscar veh√≠culos con filtros")
    print("15. Mostrar historial de usuario")
    print('0. Cerra sesi√≥n')
    return input('Elige opci√≥n: ')

# Funciones de autenticaci√≥n
def registrar_usuario():
    nombre = input("Nombre: ")
    contrase√±a = input("Contrase√±a: ")

    datos = {
        "nombre": nombre,
        "contrase√±a": contrase√±a
    }

    try:
        respuesta = requests.post(f"{URL}/registro", json=datos)

        if respuesta.status_code == 201:
            print("‚úÖ Registrado con √©xito.")
        else:
            error = respuesta.json().get("error", "Error desconocido")
            print(f"‚ùå Error: {error}")

    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error: {error}")

def iniciar_sesion():
    """Inicia sesi√≥n y almacena el token"""
    global token
    nombre = input("Nombre: ")
    contrase√±a = input("Contrase√±a: ")

    try:
        respuesta = requests.post(f"{URL}/login", json={"nombre":nombre,"contrase√±a":contrase√±a})
        if token:
            token = respuesta.json()["acces_token"]
        if respuesta.status_code == 200:
            print("‚úÖ Sesi√≥n iniciada correctamente")
        else:
            error = respuesta.json().get("error", "Error desconocido")
            print(f"‚ùå Error: {error}")
    except requests.exceptions.RequestException as e:
        print(f"üö® Error de conexi√≥n: {e}")

def ver_valoraciones():
    with open("valoraciones.json", "r") as reader:
        datos = json.load(reader)

    for nombre, resena in datos.items():
        print('-'*50)
        print(f'{nombre} ({resena['rating']}):\n{resena['valoracion']}')
    print('-'*50)


# Funciones de gesti√≥n de veh√≠culos

def agregar_vehiculo():
    """A√±ade un veh√≠culo nuevo (solo vendedores)"""
    pass

def mostrar_vehiculos():
    """Muestra lista de veh√≠culos disponibles"""
    pass

def realizar_compra():
    """Procesa la compra de un veh√≠culo"""
    pass

# Funciones de chat (Jordi) no tocar.
def enviar_mensaje():
    """Env√≠a un mensaje a un chat , se crea si no existe"""
    pass

def leer_chat():
    """Muestra el contenido de un chat"""
    pass

def ver_chats():
    """Lista todos los chats del usuario"""
    pass


# Funciones de anuncios y b√∫squeda
def publicar_anuncio():
    """Publica un nuevo anuncio de veh√≠culo"""
    pass

def listar_anuncios():
    """Muestra todos los anuncios disponibles"""
    pass

def buscar_vehiculos_filtros():
    """Busca veh√≠culos aplicando filtros"""
    pass

# Funciones de valoraci√≥n e historial
def estimar_valor_reventa():
    """Calcula el valor de reventa de un veh√≠culo"""
    pass

def gestionar_historial_vehiculo():
    """A√±ade entradas al historial de un veh√≠culo"""
    pass

def mostrar_historial_usuario():
    """Muestra el historial de transacciones del usuario"""
    pass

if __name__ == "__main__":
    print('üöÄ BIENVENIDO A COMPRAVENTA DE VEH√çCULOS üöÄ')
    while True:
        if token is None:  # Men√∫ principal (no autenticado)
            opcion = menu_principal()
            
            match opcion:
                case '1':
                    registrar_usuario()
                case '2':
                    iniciar_sesion()
                case '3':
                    ver_valoraciones()
                case '0':
                    print("Saliendo del sistema...")
                    break
                case _:
                    print("Opci√≥n no v√°lida. Intente nuevamente.")
        
        else:  # Men√∫ de usuario (autenticado)
            opcion = menu_usuario()
            
            match opcion:
                case '4':
                    agregar_vehiculo()
                case '5':
                    mostrar_vehiculos()
                case '6':
                    realizar_compra()
                case '7':
                    enviar_mensaje()
                case '8':
                    leer_chat()
                case '9':
                    ver_chats()
                case '10':
                    estimar_valor_reventa()
                case '11':
                    gestionar_historial_vehiculo()
                case '12':
                    publicar_anuncio()
                case '13':
                    listar_anuncios()
                case '14':
                    buscar_vehiculos_filtros()
                case '15':
                    mostrar_historial_usuario()
                case '0':
                    print("Cerrando sesi√≥n...")
                    token = None  # Cierra sesi√≥n
                case _:
                    print("Opci√≥n no v√°lida. Intenta nuevamente.")
